services:
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_resume
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: valeron@gmail.com
      PGADMIN_DEFAULT_PASSWORD: rfk,fcf
    networks:
      app_test_resume:
        ipv4_address: 172.23.1.4
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  
  db:    
    image: postgres:latest
    env_file:
      - ./.env
    container_name: postgres_resume
    restart: always # Ensures the container restarts if it crashes
    environment:
      POSTGRES_USER: $DATABASE_USER # Username for the database
      POSTGRES_PASSWORD: $DATABASE_PASSWORD # Password for the database user
      POSTGRES_DB: $DATABASE_NAME # Default database to create
      POSTGRES_HOST: $DB_HOST
    networks:
      app_test_resume:
        ipv4_address: 172.23.1.3
    ports:
      - "$EXTERNAL_PORT:$INTERNAL_PORT" # Maps host port 5432 to container port 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_PASSWORD}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:      
      - db_data:/var/lib/postgresql@17/data:rw

  frontend:
    container_name: frontend-react
    build:
      context: ./frontend
      dockerfile: Dockerfile      
    networks:
      app_test_resume:
        ipv4_address: 172.23.1.5
    ports: 
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /frontend
          ignore:
            - node_modules
    volumes:
      - ./frontend:/frontend

  backend:  
    depends_on:
      db:
        condition: service_healthy
    container_name: backend
    ports: 
      - "8080:8080"
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      app_test_resume:
        ipv4_address: 172.23.1.6
    volumes:
      - ./:/backend

networks:
  app_test_resume:    
    name: app_test_resume
    ipam:
      config:        
        - subnet: 172.23.0.0/16
          gateway: 172.23.1.1
          #docker-compose v3+ do not use ip_range
          ip_range: 172.23.1.0/24

volumes:
  pgadmin_data:
  db_data:  
